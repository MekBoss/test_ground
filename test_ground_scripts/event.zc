//most things here attached to pre defined sectors
//so direct copypasting can, and would, cause problems

//spawning sector numbers (things spawns here)
enum ground_spawn_points
{
    //sector number for spawning weapons/ammo...
    GSP_WEAPON = 95,
    //...items...
    GSP_ITEM = 99,
    //...and monsters
    GSP_MONSTER = 119
};

//defines which sector numbers should be used for spawning monsters
enum ground_monster_sectors
{
    GMS_ZOMBIEMAN = 98,
    GMS_NAZI = 100,
    GMS_SHOTGUNGUY = 101,
    GMS_CHAINGUNNER = 102,
    GMS_MASTERMIND = 103,
    GMS_LOSTSOUL = 114,
    GMS_REVENANT = 113,
    GMS_DOOMIMP = 112,
    GMS_ARCHVILE = 111,
    GMS_BARON = 110,
    GMS_KNIGHT = 115,
    GMS_DEMON = 109,
    GMS_CACODEMON = 108,
    GMS_PAIN = 107,
    GMS_FATSO = 106,
    GMS_CYBERDEMON = 104,
    GMS_ARACHNOTRON = 105,
};

//defines sector numbers for all inventory items (all, like weapons, ammo, medikits, etc.)
enum ground_item_sectors
{
    //WEAPONS AND AMMO
    GIS_CHAINSAW = 29,
    GIS_PISTOL = 68,
    GIS_SHOTGUN = 67,
    GIS_SSG = 66,
    GIS_CHAINGUN = 65,
    GIS_ROCKETLAUNCHER = 64,
    GIS_PLASMARIFLE = 63,
    GIS_BFG = 62,
    GIS_CLIP = 61,
    GIS_CLIPBOX = 60,
    GIS_SHELL = 59,
    GIS_SHELLBOX = 53,
    GIS_ROCKETAMMO = 54,
    GIS_ROCKETBOX = 55,
    GIS_CELL = 56,
    GIS_CELLPACK = 57,
    GIS_BACKPACK = 58,

    //other items
    GIS_ARMORBONUS = 69,
    GIS_GREENARMOR = 31,
    GIS_BLUEARMOR = 13,
    GIS_MEGASPHERE = 70,
    GIS_ALLMAP = 71,
    GIS_RADSUIT = 72,
    GIS_INFRARED = 73,
    GIS_INVUL = 74,
    GIS_HEALTHBONUS = 80,
    GIS_STIMPACK = 79,
    GIS_MEDIKIT = 78,
    GIS_BERSERK = 77,
    GIS_INVIS = 75,
    GIS_SOULSPHERE = 76,
};


enum ground_line_special
{
    GLS_ZOMBIEMAN = 1,
};

class test_ground_event : eventhandler
{
private actor temp_arena_center;

private void ground_freeze_actor(actor a)
{
    if(a)
    {
        a.tics = -1;
        a.bdormant = true;
        if(!temp_arena_center)
            temp_arena_center = actor.spawn("healthbonus", ground_get_sector_center(level.sectors[85]) );

        if(temp_arena_center)
            a.a_face(temp_arena_center);
    }
}

private vector3 ground_get_sector_center(sector s = null)
{
    if(s)
        return(s.centerspot, s.CenterFloor() );

    else
        return (0, 0, 0);
}

private void ground_init_monsters()
{
    switch(gameinfo.gametype)
    {
        case GAME_Doom:
        default:
            grounds_init_doom_monsters();
        break;
    }
}

private void grounds_init_doom_monsters()
{
    actor a = actor.spawn("arachnotron", ground_get_sector_center(level.sectors[GMS_ARACHNOTRON]) );
    ground_freeze_actor(a);

    a = actor.spawn("cyberdemon", ground_get_sector_center(level.sectors[GMS_CYBERDEMON]) );
    ground_freeze_actor(a);

    a = actor.spawn("fatso", ground_get_sector_center(level.sectors[GMS_FATSO]) );
    ground_freeze_actor(a);

    a = actor.spawn("painelemental", ground_get_sector_center(level.sectors[GMS_PAIN]) );
    ground_freeze_actor(a);

    a = actor.spawn("cacodemon", ground_get_sector_center(level.sectors[GMS_CACODEMON]) );
    ground_freeze_actor(a);

    a = actor.spawn("demon", ground_get_sector_center(level.sectors[GMS_DEMON]) );
    ground_freeze_actor(a);

    a = actor.spawn("hellknight", ground_get_sector_center(level.sectors[GMS_KNIGHT]) );
    ground_freeze_actor(a);

    a = actor.spawn("baronofhell", ground_get_sector_center(level.sectors[GMS_BARON]) );
    ground_freeze_actor(a);

    a = actor.spawn("archvile", ground_get_sector_center(level.sectors[GMS_ARCHVILE]) );
    ground_freeze_actor(a);

    a = actor.spawn("doomimp", ground_get_sector_center(level.sectors[GMS_DOOMIMP]) );
    ground_freeze_actor(a);

    a = actor.spawn("revenant", ground_get_sector_center(level.sectors[GMS_REVENANT]) );
    ground_freeze_actor(a);

    a = actor.spawn("lostsoul", ground_get_sector_center(level.sectors[GMS_LOSTSOUL]) );
    ground_freeze_actor(a);

    a = actor.spawn("spidermastermind", ground_get_sector_center(level.sectors[GMS_MASTERMIND]) );
    ground_freeze_actor(a);

    a = actor.spawn("chaingunguy", ground_get_sector_center(level.sectors[GMS_CHAINGUNNER]) );
    ground_freeze_actor(a);

    a = actor.spawn("shotgunguy", ground_get_sector_center(level.sectors[GMS_SHOTGUNGUY]) );
    ground_freeze_actor(a);

    a = actor.spawn("zombieman", ground_get_sector_center(level.sectors[GMS_ZOMBIEMAN]) );
    ground_freeze_actor(a);

    a = actor.spawn("wolfensteinss", ground_get_sector_center(level.sectors[GMS_NAZI]) );
    ground_freeze_actor(a);

    if(temp_arena_center)
        temp_arena_center.destroy();
}

//ammo and backpack counts as weapons
private void ground_init_weapons()
{
    actor.spawn("chainsaw", ground_get_sector_center(level.sectors[GIS_CHAINSAW]) );
    actor.spawn("pistol", ground_get_sector_center(level.sectors[GIS_PISTOL]) );
    actor.spawn("shotgun", ground_get_sector_center(level.sectors[GIS_SHOTGUN]) );
    actor.spawn("supershotgun", ground_get_sector_center(level.sectors[GIS_SSG]) );
    actor.spawn("chaingun", ground_get_sector_center(level.sectors[GIS_CHAINGUN]) );
    actor.spawn("rocketlauncher", ground_get_sector_center(level.sectors[GIS_ROCKETLAUNCHER]) );
    actor.spawn("plasmarifle", ground_get_sector_center(level.sectors[GIS_PLASMARIFLE]) );
    actor.spawn("bfg9000", ground_get_sector_center(level.sectors[GIS_BFG]) );

    actor.spawn("clip", ground_get_sector_center(level.sectors[GIS_CLIP]) );
    actor.spawn("clipbox", ground_get_sector_center(level.sectors[GIS_CLIPBOX]) );
    actor.spawn("shell", ground_get_sector_center(level.sectors[GIS_SHELL]) );
    actor.spawn("shellbox", ground_get_sector_center(level.sectors[GIS_SHELLBOX]) );
    actor.spawn("rocketammo", ground_get_sector_center(level.sectors[GIS_ROCKETAMMO]) );
    actor.spawn("rocketbox", ground_get_sector_center(level.sectors[GIS_ROCKETBOX]) );
    actor.spawn("cell", ground_get_sector_center(level.sectors[GIS_CELL]) );
    actor.spawn("cellpack", ground_get_sector_center(level.sectors[GIS_CELLPACK]) );
    actor.spawn("backpack", ground_get_sector_center(level.sectors[GIS_BACKPACK]) );
}

private void ground_init_items()
{
    actor.spawn("armorbonus", ground_get_sector_center(level.sectors[GIS_ARMORBONUS]) );
    actor.spawn("greenarmor", ground_get_sector_center(level.sectors[GIS_GREENARMOR]) );
    actor.spawn("bluearmor", ground_get_sector_center(level.sectors[GIS_BLUEARMOR]) );
    actor.spawn("healthbonus", ground_get_sector_center(level.sectors[GIS_HEALTHBONUS]) );
    actor.spawn("stimpack", ground_get_sector_center(level.sectors[GIS_STIMPACK]) );
    actor.spawn("medikit", ground_get_sector_center(level.sectors[GIS_MEDIKIT]) );
    actor.spawn("berserk", ground_get_sector_center(level.sectors[GIS_BERSERK]) );
    actor.spawn("megasphere", ground_get_sector_center(level.sectors[GIS_MEGASPHERE]) );
    actor.spawn("allmap", ground_get_sector_center(level.sectors[GIS_ALLMAP]) );
    actor.spawn("radsuit", ground_get_sector_center(level.sectors[GIS_RADSUIT]) );
    actor.spawn("infrared", ground_get_sector_center(level.sectors[GIS_INFRARED]) );
    actor.spawn("invulnerabilitysphere", ground_get_sector_center(level.sectors[GIS_INVUL]) );
    actor.spawn("blursphere", ground_get_sector_center(level.sectors[GIS_INVIS]) );
    actor.spawn("soulsphere", ground_get_sector_center(level.sectors[GIS_SOULSPHERE]) );
    
}

override void worldloaded(worldevent e)
{
    ground_init_monsters();
    ground_init_weapons();
    ground_init_items();
}

private void ground_spawn_item(class<actor> type = null, int pos = 0)
{
    if(type && pos)
    {
        vector3 p = (0, 0, 0);
        switch(pos)
        {
            default:
            case 0:
            break;

            case 1:
                p = ground_get_sector_center(level.sectors[GSP_WEAPON]);
            break;

            case 2:
                p = ground_get_sector_center(level.sectors[GSP_ITEM]);
            break;
        }
        actor.spawn(type, p, ALLOW_REPLACE);
    }
}

private void ground_spawn_monster(class<actor> type = null)
{
    if(type)
    {
        if(type == 'demon' && random[ground_monster](0, 1) == 1)
            type = 'spectre';

        actor.spawn(type, ground_get_sector_center(level.sectors[GSP_MONSTER]), ALLOW_REPLACE);
    }
}

override void WorldLinePreActivated(WorldEvent e)
{
    //pure magic numbers here ripped directly from map editor
    if(e.ActivatedLine)
    {
        //console.printf("activated line %i", e.ActivatedLine.index() );
        //which actor should spawn
        class<actor> acc = null;
        //and on what position
        //1 weapons
        //2 items
        //3 monsters
        int spawn_type = 0;

        switch(e.ActivatedLine.index() )
        {
            case 0:
            default:
            break;

            //weapons here
            case 253:
                acc = "chainsaw";
                spawn_type = 1;
            break;
    
            case 237:
                acc = "pistol";
                spawn_type = 1;
            break;
            case 241:
                acc = "shotgun";
                spawn_type = 1;
            break;
            case 244:
                acc = "supershotgun";
                spawn_type = 1;
            break;
            case 247:
                acc = "chaingun";
                spawn_type = 1;
            break;
            case 249:
                acc = "rocketlauncher";
                spawn_type = 1;
            break;
            case 256:
                acc = "plasmarifle";
                spawn_type = 1;
            break;
            case 259:
                acc = "bfg9000";
                spawn_type = 1;
            break;
            case 262:
                acc = "clip";
                spawn_type = 1;
            break;
            case 265:
                acc = "clipbox";
                spawn_type = 1;
            break;
            case 267:
                acc = "shell";
                spawn_type = 1;
            break;
            case 271:
                acc = "shellbox";
                spawn_type = 1;
            break;
            case 273:
                acc = "rocketammo";
                spawn_type = 1;
            break;
            case 277:
                acc = "rocketbox";
                spawn_type = 1;
            break;
            case 279:
                acc = "cell";
                spawn_type = 1;
            break;
            case 282:
                acc = "cellpack";
                spawn_type = 1;
            break;
            case 285:
                acc = "backpack";
                spawn_type = 1;
            break;

        
            case 159:
                acc = "armorbonus";
                spawn_type = 2;
            break;

            case 164:
                acc = "greenarmor";
                spawn_type = 2;
            break;
            case 169:
                acc = "bluearmor";
                spawn_type = 2;
            break;
            case 174:
                acc = "healthbonus";
                spawn_type = 2;
            break;
            case 179:
                acc = "stimpack";
                spawn_type = 2;
            break;
            case 184:
                acc = "medikit";
                spawn_type = 2;
            break;
            case 189:
                acc = "berserk";
                spawn_type = 2;
            break;
            case 149:
                acc = "soulsphere";
                spawn_type = 2;
            break;
            case 144:
                acc = "blursphere";
                spawn_type = 2;
            break;
            case 139:
                acc = "invulnerabilitysphere";
                spawn_type = 2;
            break;
            case 134:
                acc = "infrared";
                spawn_type = 2;
            break;
            case 129:
                acc = "radsuit";
                spawn_type = 2;
            break;
            case 124:
                acc = "allmap";
                spawn_type = 2;
            break;
            case 119:
                acc = "megasphere";
                spawn_type = 2;
            break;


            case 783:
                acc = "arachnotron";
                spawn_type = 3;
            break;
            case 780:
                acc = "cyberdemon";
                spawn_type = 3;
            break;
            case 787:
                acc = "fatso";
                spawn_type = 3;
            break;
            case 793:
            case 79:
               acc = "painelemental";
                spawn_type = 3;
            break;
            case 798:
                acc = "cacodemon";
                spawn_type = 3;
            break;
            case 802:
                acc = "demon";
                spawn_type = 3;
            break;
            case 828:
                acc = "hellknight";
                spawn_type = 3;
            break;
            case 805:
                acc = "baronofhell";
                spawn_type = 3;
            break;
            case 808:
                acc = "archvile";
                spawn_type = 3;
            break;
            case 812:
                acc = "doomimp";
                spawn_type = 3;
            break;
            case 817:
                acc = "revenant";
                spawn_type = 3;
            break;
            case 822:
                acc = "lostsoul";
                spawn_type = 3;
            break;
            case 773:
                acc = "spidermastermind";
                spawn_type = 3;
            break;
            case 832:
                acc = "chaingunguy";
                spawn_type = 3;
            break;
            case 837:
                acc = "shotgunguy";
                spawn_type = 3;
            break;
            case 759:
            case 756:
                acc = "zombieman";
                spawn_type = 3;
            break;
            case 748:
            case 749:
               acc = "wolfensteinss";
                spawn_type = 3;
            break;
       }

        if(acc && spawn_type)
        {
            if(spawn_type == 1 || spawn_type == 2)
            ground_spawn_item(acc, spawn_type);

            else
                ground_spawn_monster(acc);
        }

    }
}

}